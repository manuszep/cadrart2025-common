apiVersion: apps/v1
kind: Deployment
metadata:
  name: cadrart-prometheus-exporter
  namespace: cadrart
  labels:
    app: cadrart
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cadrart
      component: monitoring
  template:
    metadata:
      labels:
        app: cadrart
        component: monitoring
    spec:
      containers:
        - name: prometheus-exporter
          image: prom/prometheus:latest
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--web.console.libraries=/etc/prometheus/console_libraries"
            - "--web.console.templates=/etc/prometheus/consoles"
            - "--storage.tsdb.retention.time=7d"
            - "--web.enable-lifecycle"
          ports:
            - containerPort: 9090
              name: http
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
            - name: prometheus-storage
              mountPath: /prometheus
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "200m"
              memory: "256Mi"
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
        - name: prometheus-storage
          persistentVolumeClaim:
            claimName: prometheus-storage-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: cadrart-prometheus-service
  namespace: cadrart
  labels:
    app: cadrart
    component: monitoring
spec:
  ports:
    - port: 9090
      targetPort: 9090
      protocol: TCP
      name: http
  selector:
    app: cadrart
    component: monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: cadrart
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      # - "first_rules.yml"
      # - "second_rules.yml"

    scrape_configs:
      - job_name: 'cadrart-backend'
        static_configs:
          - targets: ['backend:3000']
        metrics_path: '/metrics/prometheus'
        scrape_interval: 15s
        
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
